name: Verify
on: push

jobs:
  verify:
    name: Verify
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: cachix/install-nix-action@v30
        with:
          extra_nix_config: "experimental-features = flakes nix-command pipe-operators"

      - name: Check
        if: ${{ !cancelled() }}
        run: |
          sudo mkdir -p /etc/nixos
          echo '{ nixpkgs.hostPlatform = "x86_64-linux"; }' | sudo tee /etc/nixos/hardware.nix > /dev/null

          nix flake check --impure --option keep-going true

      - name: Check default.nix imports
        if: ${{ !cancelled() }}
        run: |
          rm -f failed

          find . -path ./pkgs -prune -o -name default.nix -print | while read -r DEFAULT; do
            echo "Checking $DEFAULT"
            USED="$(nix eval --json --file "$DEFAULT" imports | jq -r ".[]")"

            ls "$(dirname "$DEFAULT")" | grep -Fv default.nix | while read -r MODULE; do
              if echo "$USED" | grep -Fq "$MODULE"; then
                echo "  - $MODULE"
              else
                echo "  - $MODULE (missing)"
                touch failed
              fi
            done
          done

          test ! -f failed

      - name: Check unused resources
        if: ${{ !cancelled() }}
        run: |
          rm -f failed
          USED="$(find . \( -path ./.git -o -path ./resources \) -prune -o -type f -exec cat "{}" + | grep resources)"

          find resources -path resources/secrets -prune -o -type f -print | while read -r FILE; do
            if echo "$USED" | grep -Fq "$FILE"; then
              echo "Checking $FILE"
            else
              echo "Checking $FILE (failed)"
              touch failed
            fi
          done

          test ! -f failed

      - name: Lint nix
        if: ${{ !cancelled() }}
        run: | # HACK(github.com/oppiliappan/statix/issues/88): Add statix check
          rm -f failed

          find . -name "*.nix" | while read -r FILE; do
            echo "Checking $FILE"
            DIAGNOSTICS="$(nix run github:oxalica/nil -- diagnostics "$FILE")" # HACK(github.com/oxalica/nil/issues/160): Use nil from nixpkgs

            if [ -n "$DIAGNOSTICS" ]; then
              echo "$DIAGNOSTICS"
              touch failed
            fi
          done

          test ! -f failed

      - name: Lint shell
        if: ${{ !cancelled() }}
        run: |
          rm -f failed

          find . -name "*.sh" | while read -r FILE; do
            echo "Checking $FILE"
            nix run nixpkgs#shellcheck -- "$FILE" || touch failed
          done

          test ! -f failed
