name: Verify
on: push

jobs:
  verify:
    name: Verify
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v4

      - uses: cachix/install-nix-action@v30
        with:
          extra_nix_config: "experimental-features = flakes nix-command pipe-operators"

      - name: Build
        if: ${{ !cancelled() }}
        run: |
          jq -r "keys[]" machines.json | while read -r MACHINE; do
            timeout 20m nix build ".#nixosConfigurations.$MACHINE.config.system.build.toplevel" || exit 1
          done

      - name: Check default.nix imports
        if: ${{ !cancelled() }}
        run: |
          rm -f failed

          find . -path ./overlay -prune -o -name default.nix -print | while read -r DEFAULT; do
            echo "Checking $DEFAULT"
            USED="$(nix eval --json --file "$DEFAULT" imports | jq -r ".[]")"

            ls "$(dirname "$DEFAULT")" | grep -Fv default.nix | while read -r MODULE; do
              if echo "$USED" | grep -Fq "$MODULE"; then
                echo "  - $MODULE"
              else
                echo "  - $MODULE (missing)"
                touch failed
              fi
            done
          done

          test ! -f failed

      - name: Check unused resources
        if: ${{ !cancelled() }}
        run: |
          rm -f failed
          USED="$(find . \( -path ./.git -o -path ./resources \) -prune -o -type f -exec grep resources "{}" \;)"

          find resources -path resources/secrets -prune -o -type f -print | while read -r FILE; do
            if echo "$USED" | grep -Fq "$FILE"; then
              echo "Checking $FILE"
            else
              echo "Checking $FILE (failed)"
              touch failed
            fi
          done

          test ! -f failed

      - name: Lint nix
        if: ${{ !cancelled() }}
        run: | # FIXME: Add statix check once statix supports pipe operators
          rm -f failed

          find . -name "*.nix" | while read -r FILE; do
            echo "Checking $FILE"
            DIAGNOSTICS="$(nix run github:oxalica/nil -- diagnostics "$FILE")" # FIXME: Use nil from nixpkgs once pipe operators are released

            if [ -n "$DIAGNOSTICS" ]; then
              echo "$DIAGNOSTICS"
              touch failed
            fi
          done

          test ! -f failed

      - name: Lint shell
        if: ${{ !cancelled() }}
        run: |
          rm -f failed

          find . -name "*.sh" | while read -r FILE; do
            echo "Checking $FILE"
            nix run nixpkgs#shellcheck -- "$FILE" || touch failed
          done

          test ! -f failed
