name: Verify

on: push

jobs:
  verify:
    name: Verify
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@main
      - uses: cachix/install-nix-action@master

      - name: Check
        if: ${{ !cancelled() }}
        run: |
          sudo mkdir -p /etc/nixos
          echo '{ nixpkgs.hostPlatform = "x86_64-linux"; }' | sudo tee /etc/nixos/hardware.nix > /dev/null

          nix flake check --impure --option keep-going true

      - name: Check default.nix imports
        if: ${{ !cancelled() }}
        run: |
          failed="false"

          find . -name default.nix | while read -r default; do
            echo "Checking $default"
            used="$(nix eval --json --file "$default" imports | jq -r ".[]")"

            ls "$(dirname "$default")" | grep -v default.nix | while read -r module; do
              if [ -z "$(echo "$used" | grep "$module")" ]; then
                echo "  - $module (missing)"
                failed="true"
              else
                echo "  - $module"
              fi
            done
          done

          test "$failed" = "false"

      - name: Lint Nix
        if: ${{ !cancelled() }}
        run: |
          failed="false"
          nix run nixpkgs#statix check || failed="true"

          find . -name "*.nix" | while read -r file; do
            echo "Checking $file"
            diagnostics="$(nix run nixpkgs#nil -- diagnostics "$file")"

            if [ -n "$diagnostics" ]; then
              echo "$diagnostics"
              failed="true"
            fi
          done

          test "$failed" = "false"

      - name: Lint Shell
        if: ${{ !cancelled() }}
        run: |
          failed="false"

          find . -name "*.sh" | while read -r file; do
            echo "Checking $file"
            nix run nixpkgs#shellcheck -- "$file" || failed="true"
          done

          test "$failed" = "false"
