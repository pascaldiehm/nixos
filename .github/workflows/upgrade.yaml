name: Upgrade

on:
  schedule:
    - cron: "0 3 * * *"

jobs:
  upgrade:
    name: Upgrade
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - uses: jlumbroso/free-disk-space@main
      - uses: actions/checkout@main

      - uses: cachix/install-nix-action@master
        with:
          extra_nix_config: "experimental-features = flakes nix-command pipe-operators"

      - name: Upgrade
        run: nix run .#upgrade

      - name: Detect changes
        continue-on-error: true
        id: detect-changes
        run: test -n "$(git status --porcelain)"

      - name: Verify
        continue-on-error: true
        id: verify
        if: steps.detect-changes.outcome == 'success'
        run: |
          sudo mkdir -p /etc/nixos
          echo '{ nixpkgs.hostPlatform = "x86_64-linux"; }' | sudo tee /etc/nixos/hardware.nix > /dev/null

          jq -r "keys[]" machines.json | while read -r machine; do
            timeout 20m nix build --impure ".#nixosConfigurations.$machine.config.system.build.toplevel" || exit 1
          done

      - name: Validate patches
        continue-on-error: true
        id: validate-patches
        if: steps.detect-changes.outcome == 'success'
        run: |
          failed="false"

          find patches -mindepth 1 -maxdepth 1 -type d -exec basename "{}" ";" | while read -r package; do
            echo "Checking $package"
            nix build ".#nixosConfigurations.installer.pkgs.$package.src"

            ls "patches/$package" | while read -r patch; do
              if patch -d result -p 1 --dry-run < "patches/$package/$patch" > /dev/null; then
                echo "  - $patch"
              else
                echo "  - $patch (failed)"
                failed="true"
              fi
            done

            rm result
          done

          test "$failed" = "false"

      - name: Commit
        if: steps.verify.outcome == 'success'
        run: |
          CHANGES_FLAKE="$(git diff flake.lock | grep repo | cut -d '"' -f 4)"
          [ -n "$CHANGES_FLAKE" ] && CHANGES_FLAKE="$(echo "Flake changes:" && echo "$CHANGES_FLAKE" | sed -E "s/^/- /")"
          git add flake.lock

          CHANGES_EXTENSIONS_FIREFOX="$(git diff resources/extensions/firefox.json | grep "^+ " | cut -d '"' -f 4)"
          [ -n "$CHANGES_EXTENSIONS_FIREFOX" ] && CHANGES_EXTENSIONS_FIREFOX="$(echo "Firefox extension changes:" && echo "$CHANGES_EXTENSIONS_FIREFOX" | sed -E "s/^/- /")"
          git add resources/extensions/firefox.json

          CHANGES_EXTENSIONS_THUNDERBIRD="$(git diff resources/extensions/thunderbird.json | grep "^+ " | cut -d '"' -f 4)"
          [ -n "$CHANGES_EXTENSIONS_THUNDERBIRD" ] && CHANGES_EXTENSIONS_THUNDERBIRD="$(echo "Thunderbird extension changes:" && echo "$CHANGES_EXTENSIONS_THUNDERBIRD" | sed -E "s/^/- /")"
          git add resources/extensions/thunderbird.json

          CHANGES_EXTENSIONS_VSCODE="$(git diff resources/extensions/vscode.json | grep "^+ " | cut -d '"' -f 4,8 --output-delimiter .)"
          [ -n "$CHANGES_EXTENSIONS_VSCODE" ] && CHANGES_EXTENSIONS_VSCODE="$(echo "VSCode extension changes:" && echo "$CHANGES_EXTENSIONS_VSCODE" | sed -E "s/^/- /")"
          git add resources/extensions/vscode.json

          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git commit -m "Automatic upgrade" -m "$CHANGES_FLAKE" -m "$CHANGES_EXTENSIONS_FIREFOX" -m "$CHANGES_EXTENSIONS_THUNDERBIRD" -m "$CHANGES_EXTENSIONS_VSCODE"
          git push

      - name: Fail
        if: steps.validate-patches.outcome == 'failure'
        run: exit 1
